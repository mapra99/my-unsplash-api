type Authenticatable {
  email: String!
}

"""
Autogenerated input type of Create
"""
input CreateInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  signedBlobId: String!
  title: String!
}

type Credential {
  accessToken: String!
  client: String!
  expiry: Int!
  tokenType: String!
  uid: String!
}

type Mutation {
  """
  Creates a new post
  """
  createPost(
    """
    Parameters for Create
    """
    input: CreateInput!
  ): Post
  userLogin(email: String!, password: String!): UserLoginPayload
  userLogout: UserLogoutPayload
  userRegister(confirmUrl: String, email: String!, name: String!, password: String!, passwordConfirmation: String!, username: String!): UserRegisterPayload
  userSendPasswordResetWithToken(email: String!, redirectUrl: String!): UserSendPasswordResetWithTokenPayload
  userUpdatePasswordWithToken(password: String!, passwordConfirmation: String!, resetPasswordToken: String!): UserUpdatePasswordWithTokenPayload
}

type Post {
  createdAt: String!
  id: ID!
  imageUrl: String!
  title: String!
  updatedAt: String!
}

type Query {
  """
  Returns the posts feed
  """
  fetchPosts(limit: Int, offset: Int): [Post!]
}

"""
Autogenerated return type of UserLogin
"""
type UserLoginPayload {
  authenticatable: Authenticatable!
  credentials: Credential!
}

"""
Autogenerated return type of UserLogout
"""
type UserLogoutPayload {
  authenticatable: Authenticatable!
}

"""
Autogenerated return type of UserRegister
"""
type UserRegisterPayload {
  """
  Authentication credentials. Null if after signUp resource is not active for
  authentication (e.g. Email confirmation required).
  """
  credentials: Credential
}

"""
Autogenerated return type of UserSendPasswordResetWithToken
"""
type UserSendPasswordResetWithTokenPayload {
  message: String!
}

"""
Autogenerated return type of UserUpdatePasswordWithToken
"""
type UserUpdatePasswordWithTokenPayload {
  authenticatable: Authenticatable!

  """
  Authentication credentials. Resource must be signed_in for credentials to be returned.
  """
  credentials: Credential
}